module.exports=[79571,a=>{"use strict";var b=a.i(11857);let c=(0,b.registerClientReference)(function(){throw Error("Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/providers.tsx <module evaluation>","ThemeProvider"),d=(0,b.registerClientReference)(function(){throw Error("Attempted to call useCardSettings() from the server but useCardSettings is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/providers.tsx <module evaluation>","useCardSettings"),e=(0,b.registerClientReference)(function(){throw Error("Attempted to call useContainerSettings() from the server but useContainerSettings is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/providers.tsx <module evaluation>","useContainerSettings"),f=(0,b.registerClientReference)(function(){throw Error("Attempted to call useLighting() from the server but useLighting is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/providers.tsx <module evaluation>","useLighting"),g=(0,b.registerClientReference)(function(){throw Error("Attempted to call useThemeTokens() from the server but useThemeTokens is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/providers.tsx <module evaluation>","useThemeTokens");a.s(["ThemeProvider",0,c,"useCardSettings",0,d,"useContainerSettings",0,e,"useLighting",0,f,"useThemeTokens",0,g])},34062,a=>{"use strict";var b=a.i(11857);let c=(0,b.registerClientReference)(function(){throw Error("Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/providers.tsx","ThemeProvider"),d=(0,b.registerClientReference)(function(){throw Error("Attempted to call useCardSettings() from the server but useCardSettings is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/providers.tsx","useCardSettings"),e=(0,b.registerClientReference)(function(){throw Error("Attempted to call useContainerSettings() from the server but useContainerSettings is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/providers.tsx","useContainerSettings"),f=(0,b.registerClientReference)(function(){throw Error("Attempted to call useLighting() from the server but useLighting is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/providers.tsx","useLighting"),g=(0,b.registerClientReference)(function(){throw Error("Attempted to call useThemeTokens() from the server but useThemeTokens is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/providers.tsx","useThemeTokens");a.s(["ThemeProvider",0,c,"useCardSettings",0,d,"useContainerSettings",0,e,"useLighting",0,f,"useThemeTokens",0,g])},17950,a=>{"use strict";a.i(79571);var b=a.i(34062);a.n(b)},41955,a=>{"use strict";let b=(0,a.i(11857).registerClientReference)(function(){throw Error("Attempted to call BackgroundSurface() from the server but BackgroundSurface is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/surfaces/background-surface.tsx <module evaluation>","BackgroundSurface");a.s(["BackgroundSurface",0,b])},95746,a=>{"use strict";let b=(0,a.i(11857).registerClientReference)(function(){throw Error("Attempted to call BackgroundSurface() from the server but BackgroundSurface is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/surfaces/background-surface.tsx","BackgroundSurface");a.s(["BackgroundSurface",0,b])},3045,a=>{"use strict";a.i(41955);var b=a.i(95746);a.n(b)},33994,a=>{"use strict";let b=(0,a.i(11857).registerClientReference)(function(){throw Error("Attempted to call Navbar() from the server but Navbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/navbar.tsx <module evaluation>","Navbar");a.s(["Navbar",0,b])},42976,a=>{"use strict";let b=(0,a.i(11857).registerClientReference)(function(){throw Error("Attempted to call Navbar() from the server but Navbar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/navbar.tsx","Navbar");a.s(["Navbar",0,b])},30270,a=>{"use strict";a.i(33994);var b=a.i(42976);a.n(b)},82170,a=>{"use strict";let b=(0,a.i(11857).registerClientReference)(function(){throw Error("Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/ui/sonner.tsx <module evaluation>","Toaster");a.s(["Toaster",0,b])},52605,a=>{"use strict";let b=(0,a.i(11857).registerClientReference)(function(){throw Error("Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"[project]/components/ui/sonner.tsx","Toaster");a.s(["Toaster",0,b])},5968,a=>{"use strict";a.i(82170);var b=a.i(52605);a.n(b)},33290,a=>{"use strict";var b=a.i(7997),c=a.i(17950),d=a.i(3045),e=a.i(30270),f=a.i(5968);function g({children:a}){return(0,b.jsx)("html",{lang:"en",suppressHydrationWarning:!0,children:(0,b.jsx)("body",{className:"bg-transparent",children:(0,b.jsxs)(c.ThemeProvider,{attribute:"class",defaultTheme:"system",enableSystem:!0,disableTransitionOnChange:!0,children:[(0,b.jsxs)(d.BackgroundSurface,{children:[(0,b.jsx)(e.Navbar,{}),(0,b.jsx)("main",{className:"pt-28",children:a})]}),(0,b.jsx)(f.Toaster,{richColors:!0,closeButton:!0,position:"top-right"})]})})})}a.s(["default",()=>g,"metadata",0,{title:"Colors - Color Palette Picker",description:"Design tool to help pick color palettes and see how colors interact with each other"}])}];

//# sourceMappingURL=_4e0f55e0._.js.map